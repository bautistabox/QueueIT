@{
    //    var queueList = ViewData["Queues"] as List<Queue>;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - QueueIT</title>

    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css"/>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet"
              href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position"
              asp-fallback-test-value="absolute"
              crossorigin="anonymous"
              integrity="sha256-eSi1q2PG6J7g7ib17yAaWMcrr5GrtohYChqibrV7PBE="/>
    </environment>
    <link rel="stylesheet" href="~/css/site.css"/>
    <link rel="stylesheet" href="~/css/myStyles.css"/>
    <link rel="icon" href="~/favicon.png"/>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">

</head>
<body class="background-grey">
<header>
    <nav class="navbar navbar-expand-sm background-dark-grey border-bottom">
        <div class="container">

            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link thin shadow-lg" asp-area="" asp-controller="Account" asp-action="UserHome">
                            <img class="layout" src="~/home.png" alt=""/>
                        </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown">
                            <img class="layout" src="~/quickqlogo.png" alt=""/>
                        </a>
                        <div id="queue-dd" class="dropdown-menu background-grey shadow-lg">
                            <h4 class="dropdown-header">Quick-Q's</h4>

                        </div>
                    </li>
                    <li class="nav-item mx-auto">
                        <img class="tall" src="~/QueueITCenterLogo.png" alt=""/>
                    </li>
                    <li class="nav-item dropdown">
                        <a href="#" class="nav-link plus dropdown-toggle shadow-lg" data-toggle="dropdown">
                            <img class="layout" src="~/plus.png" alt=""/>
                        </a>
                        <div class="dropdown-menu background-grey shadow-lg">
                            <h4 class="dropdown-header">Create</h4>
                            <button class="dropdown-item create primary-text" data-toggle="modal"
                                    data-target="#CreateTeamModal" aria-hidden="true">
                                <b>Create Team</b>
                                <br/>A Team is a group of people who own Queues
                            </button>
                            <div class="dropdown-divider"></div>
                            <button class="dropdown-item create primary-text" data-toggle="modal"
                                    data-target="#CreateQueueModal" aria-hidden="true">
                                <b>Create Queue</b>
                                <br/>A Queue is a group of tasks that are owned by a Team
                            </button>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a href="#" class="nav-link thin dropdown-toggle shadow-lg" data-toggle="dropdown">
                            <img class="layout" src="~/Bell.png" alt=""/><span id="note-badge" style="display: none;" class="badge badge-danger"></span>
                        </a>
                        <div class="dropdown-menu background-grey shadow-lg" style="min-width: 180px;">
                            <h4 class="dropdown-header">Notifications</h4>
                            <div id="notifications-list">

                            </div>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a href="#" class="nav-link thin dropdown-toggle shadow-lg" data-toggle="dropdown">
                            <div class="avatar-circle grow">
                                <span id="inish" class="initials"></span>
                            </div>
                        </a>
                        <div class="dropdown-menu background-grey shadow-lg">
                            <h4 class="dropdown-header" id="user-dd"></h4>
                            <a id="user-profile-btn" class="dropdown-item">Profile</a>
                            <form asp-controller="Home" asp-action="Logout" method="post">
                                <button class="dropdown-item primary-text" type="submit">Logout</button>
                            </form>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <partial name="_CookieConsentPartial"/>
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<div class="modal fade" id="CreateTeamModal" tabindex="-1" role="dialog"
     aria-labelledby="CreateTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content background-grey">
            <div class="modal-header">
                <h4 class="modal-title secondary-text" id="CreateTeamModalLabel">Create Team</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true" class="primary-text">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="create-team-form" asp-controller="Teams" asp-action="CreateTeam" method="POST">
                    <div class="form-group">
                        <label for="teamName" class="secondary-text">Team Name</label>
                        <input type="text" id="teamName" name="teamName" class="form-control modal-input"
                               aria-describedby="teamNameHelp" placeholder="Enter team name"/>
                        <small id="teamNameHelp" class="form-text disabled-text">
                            Choose a team name unique to yourself.
                        </small>
                        <label for="teamDesc" class="secondary-text">Team Description</label>
                        <textarea id="teamDesc" name="desc" class="form-control modal-input" rows="6" cols="50" aria-describedby="teamDescHelp" placeholder="Description (optional)"></textarea>
                        <small id="teamDescHelp" class="form-text disabled-text">
                            Provide a brief description of your team.
                        </small>
                    </div>
                    <button type="button" onclick="checkCreateTeamForm()" class="my-btn my-btn-primary right">Create Team</button>
                </form>
            </div>
            <div class="modal-footer">
                <small class="disabled-text">
                    A Team is a group of people and their Queues.
                    Work together to complete tasks and organize your workload!
                </small>
            </div>
            <div id="create-team-alert-placeholder">
                
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="CreateQueueModal" tabindex="-1" role="dialog"
     aria-labelledby="CreateQueueModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content background-grey">
            <div class="modal-header">
                <h4 class="modal-title primary-text" id="CreateQueueModalLabel">Create Queue</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true" class="primary-text">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="create-q-form" asp-controller="Queues" asp-action="CreateQueue" method="POST">
                    <div class="form-group">
                        <label for="queueTitle" class="secondary-text">Queue Title</label>
                        <input type="text" class="form-control modal-input" id="queueTitle"
                               name="queueTitle" placeholder="Enter title"/>
                        <br/>
                        <label for="teamSelector" class="secondary-text">Select Team</label>
                        <div class="input-group">
                            <select class="custom-select" id="teamSelector"
                                    name="queueTeam" aria-describedby="teamSelectorHelp">

                            </select>
                        </div>
                        <p>
                            <small id="teamSelectorHelp" class="form-text disabled-text">
                                Choose the team that will own this Queue or choose to keep it personal.
                            </small>
                        </p>

                        <label for="visibilitySelector" class="secondary-text">Select Visibility</label>
                        <div class="custom-radio-group" id="visibilitySelector" aria-describedby="visibilitySelectorHelp">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="queueVisibility"
                                       id="privateRadio" value="private" checked>
                                <label class="form-check-label secondary-text" for="privateRadio">Private</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="queueVisibility"
                                       id="publicRadio" value="public">
                                <label class="form-check-label secondary-text" for="publicRadio">Public</label>
                            </div>
                        </div>
                        <small id="visibilitySelectorHelp" class="primary-text disabled-text">
                            Public means anyone who visits the team's profile can see this Queue.
                        </small>
                    </div>
                    <button type="button" id="create-q-btn" onclick="checkCreateQForm()" class="my-btn my-btn-primary" style="color: #ffffff !important">Create Queue</button>
                </form>
            </div>
            <div class="modal-footer">
                <small class="disabled-text">
                    A Queue is a group of tasks that can be organized into one of four columns:
                    <b>Todo</b>, <b>Doing</b>, <b>Done</b>, and <b>Blocked</b>.
                </small>
            </div>
            <div id="create_Q_modal_alert_placeholder">

            </div>
        </div>
    </div>
</div>


<footer class="border-top footer disabled-text background-dark-grey">
    <div class="container">
        &copy; 2019 - QueueIT - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>

<environment include="Development">
    <script src="https://code.jquery.com/jquery-3.3.1.min.js">
    </script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.js"></script>
</environment>
<environment exclude="Development">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"
            asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
            asp-fallback-test="window.jQuery"
            crossorigin="anonymous"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.bundle.min.js"
            asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"
            asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
            crossorigin="anonymous"
            integrity="sha256-E/V4cWE4qvAeO5MOhjtGtqDzPndRO1LBk8lJ/PR7CA4=">
    </script>
</environment>
<script src="~/js/site.js" asp-append-version="true"></script>

@RenderSection("Scripts", required: false)
<script>
    $.ajax({
        type: 'get',
        url: '/Account/GetLayoutData',
        beforeSend: function(req) {
            req.setRequestHeader('Content-type', 'application/json');
        },
        success: function(resp) {
            console.dir(resp);
            fillHTML(resp);
        }
    });
    
    function checkCreateQForm() {
        if ($('#queueTitle').val().length > 50) {
            showCreateQModalAlert("Queue Title shouldn't be more than 50 characters.", "alert-danger");
            return false;
        } else if ($('#queueTitle').val().length < 1) {
            showCreateQModalAlert("You must give this Queue a title.", "alert-danger");
            return false;
        } else {
            $('#create-q-form').submit();
            return true;
        }
    }
    
    function showCreateQModalAlert(message, alertType) {
        $('#create_Q_modal_alert_placeholder').append('<div id="alertDiv" style="margin-bottom: 0" class="fade show alert ' +
            alertType +
            '"><a class="close" data-dismiss="alert">&times;</a><span>' +
            message +
            '</span></div>');

        setTimeout(
            function() { // this will automatically close the alert and remove this if the users doesnt close it in 5 secs
                $("#alertDiv").remove();
            },
            5000);
    }
    
    function checkCreateTeamForm() {
        if ($('#teamName').val().length > 50 || $('#teamName').val().length < 1) {
            if ($('#teamName').val().length > 50) {
                showCreateTeamModalAlert("Team name should not be longer than 50 characters.", "alert-danger");
            } else {
                showCreateTeamModalAlert("You must give the team a name.", "alert-danger");
            }
            return false;
        }
        if ($('#teamDesc').val().length > 450) {
            showCreateTeamModalAlert("Team Description is not required, but is limited to 450 characters.", "alert-danger");
            return false;
        }
        $('#create-team-form').submit();
    }
    
    function showCreateTeamModalAlert(message, alertType) {
        $('#create-team-alert-placeholder').append('<div id="alertDiv" style="margin-bottom: 0" class="fade show alert ' +
            alertType +
            '"><a class="close" data-dismiss="alert">&times;</a><span>' +
            message +
            '</span></div>');

        setTimeout(
            function() { // this will automatically close the alert and remove this if the users doesnt close it in 5 secs
                $("#alertDiv").remove();
            },
            5000);
    }

    function fillHTML(resp) {
        if(resp.teams.length> 0)
        {
            resp.teams.forEach(function(team) {
                var $opt = $('<option value="' + team.id + '">' + team.name + '</option>');
                $('#teamSelector').append($opt);
            });
        }
        if(resp.queues.length > 0)
        {
            resp.queues.forEach(function(queue) {
                var $a = $(
                    '<a class="dropdown-item primary-text" href="/Queues/Show/' + queue.id + '">' + queue.title + '</a>'
                );
                $('#queue-dd').append($a);
            });
        }
        $('#inish').text(resp.userInitials);
        $('#user-dd').text(resp.userFirstName + " " + resp.userLastName);

        $('#user-profile-btn').attr('href', '/Account/Profile');
        $('#users-name').text(resp.userFirstName + " " + resp.userLastName);
        $('#users-label').text('@@' + resp.userName);
        $('#new-f-name').attr('value', resp.userFirstName);
        $('#new-l-name').attr('value', resp.userLastName);
        $('#new-u-name').attr('value', resp.userName);
        $('#u-id').attr('value', resp.userId);

        if (resp.teams.length > 0) {
            resp.teams.forEach(function(team) {
                var $tr = $('<tr class="border-top">' +
                    '<td class="primary-text" style="width: 20%;"><a href="/Teams/Show/' +
                    team.id +
                    '" class="team-name-link"><h4 class="display-8">' +
                    team.name +
                    '</h4></a></td>' +
                    '<td class="secondary-text" style="width: 80%">' +
                    team.description +
                    '</td></tr>');
                $('#profile-body').append($tr);

            });
        }

        if (resp.queues.length > 0) {
            resp.queues.forEach(function(queue) {

                var $td = $('<td><div class="card m-10">' +
                    '<form action="/queues/show/' +
                    queue.id +
                    '" method="GET">' +
                    '<button class="card-body home-card shadow">' +
                    queue.title +
                    '</button>' +
                    '</form></div></td>');
                $('#q-scroll').append($td);


            });
        }

        if (resp.notifications.length > 0) {

            var count = 0;
            resp.notifications.forEach(function(note) {

                if (!note.isRead) {
                    count++;
                }

            });

            if (count > 0) {
                $('#note-badge').toggle();
                $('#note-badge').text(count);
            }


            resp.notifications.forEach(function(note) {
//                var year = date.toISOString().slice(0,4);
//                var time = date.toLocaleTimeString().slice(0,4);
//                var dateTime = time + " " + date.getMonth() + "/" + date.getDay() + "/" + year;
                var date = new Date(note.readAt);
                var today = Date.now();
                var oneDay = 60 * 60 * 24 * 1000;

                if (note.isRead) {
                    if (!((today - date) > oneDay)) {
                        var $notification = $(
                            "<div class='dropdown-divider'></div>" +
                            "<a class='dropdown-item primary-text background-light-grey' style='white-space: normal'" +
                            "href=" +
                            note.link +
                            ">" +
                            note.message +
                            "<br/><span class='disabled-text'>Read <i class='fa fa-check' aria-hidden='true'></i></span>" +
                            "</a>"
                        );
                        $('#notifications-list').append($notification);
                    }
                } else {
                    if (note.type === 1) {
                        var $notification = $(
                            "<div class='dropdown-divider'></div>" +
                            "<a class='dropdown-item primary-text' style='white-space: normal'" +
                            "href=" +
                            note.link +
                            ">" +
                            note.message +
                            "<div id='note-answer-id' class='ml-4'><a onclick='Accept(" +
                            note.id +
                            ")' href='#'>Accept</a> " +
                            "<a onclick='Decline(" +
                            note.id +
                            ")' href='#' class='link-danger'>Decline</a></div>" +
                            "</a>");
                        $('#notifications-list').append($notification);
                    } else if (note.type === 2) {
                        var $notification = $(
                            "<div class='dropdown-divider'></div>" +
                            "<a class='dropdown-item primary-text' style='white-space: normal'" +
                            "href='#' onclick='Read(" +
                            note.id +
                            ")'>" +
                            note.message +
                            "</a>");
                        $('#notifications-list').append($notification);
                    } else if (note.type === 3) {
                        var $notification = $(
                            "<div class='dropdown-divider'></div>" +
                            "<a class='dropdown-item primary-text' style='white-space: normal'" +
                            "href='#' onclick='Read(" +
                            note.id +
                            ")'>" +
                            note.message +
                            "</a>");
                        $('#notifications-list').append($notification);
                    }
                }
            });
        }
    }

    function Accept(noteId) {
        $.ajax({
            type: 'post',
            url: '/Teams/AcceptTeam',
            beforeSend: function(req) {
                req.setRequestHeader('Content-type', 'application/json');
            },
            data: JSON.stringify({
                noteId: noteId

            }),
            success: function(resp) {
                $('#note-badge').toggle();

            }
        });
    }

    function Decline(noteId) {
        $.ajax({
            type: 'post',
            url: '/Teams/DeclineTeam',
            beforeSend: function(req) {
                req.setRequestHeader('Content-type', 'application/json');
            },
            data: JSON.stringify({
                noteId: noteId
            }),
            success: function(resp) {
                $('#note-badge').toggle();
            }
        });
    }

    function Read(noteId) {
        $.ajax({
            type: 'post',
            url: '/Teams/ReadNotification',
            beforeSend: function(req) {
                req.setRequestHeader('Content-type', 'application/json');
            },
            data: JSON.stringify({
                noteId: noteId
            }),
            success: function(resp) {
                $('#note-badge').toggle();
            }
        });
    }


</script>

</body>
</html>